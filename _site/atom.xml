<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://jenntesolin.com/atom.xml" rel="self" type="application/atom+xml" /><link href="https://jenntesolin.com/" rel="alternate" type="text/html" /><updated>2020-10-13T17:18:05-04:00</updated><id>https://jenntesolin.com/atom.xml</id><title type="html">Jennifer Tesolin</title><subtitle>This is Jennifer Tesolin's personal web site. Located on this site are tutorials and tips for web developers.</subtitle><author><name>Jennifer Tesolin</name><email>me@jenntesolin.com</email></author><entry><title type="html">Installing Git and Github on your Mac</title><link href="https://jenntesolin.com/blog/2019/12/12/git-github/" rel="alternate" type="text/html" title="Installing Git and Github on your Mac" /><published>2019-12-12T06:18:00-05:00</published><updated>2019-12-12T06:18:00-05:00</updated><id>https://jenntesolin.com/blog/2019/12/12/git-github</id><content type="html" xml:base="https://jenntesolin.com/blog/2019/12/12/git-github/">&lt;p&gt;
	This post describes how to install git and github on your mac installation. There are two common ways to install. Both methods are described below. Please note the first way requires homebrew. &lt;!--more--&gt;
&lt;/p&gt;

&lt;h3&gt;Installing with homebrew&lt;/h3&gt;

&lt;p&gt;
	To install GIT, just run the below commands and enter your information when requested. Brew update/upgrade is being run to show best practice. Files should always be updated before trying to run commands.
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew update&lt;br&gt;brew upgrade&lt;br&gt;brew install git&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
	A quick way to install github, is to enter the below command in your terminal using brew casks. Casks basically give yo a way to install software without the DMG files.
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew cask install github&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Installing with DMG files&lt;/h3&gt;

&lt;p&gt;
	Go to the Git site at &lt;a hrf=&quot;https://git-scm.com/download/mac&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer noopener&quot;&gt;https://git-scm.com/download/mac&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
	Alternatively, if you use github, you can download the &lt;a hrf=&quot;https://desktop.github.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer noopener&quot;&gt;github desktop DMG&lt;/a&gt; file, then install the git command line tools from the app itself.
&lt;/p&gt;

&lt;p&gt;
	To install the git command line tools from within the GitHub application, click on the app name &quot;GitHub Desktop&quot;, then choose &quot;Install command line tool&quot;.
&lt;/p&gt;

&lt;img src=&quot;https://jenntesolin.nyc3.digitaloceanspaces.com/blog/github-cmd-tools.png&quot; alt=&quot;Image showing location of command line tools install on Github Desktop Application&quot; /&gt;</content><author><name>Jennifer Tesolin</name></author><category term="Tutorial" /><category term="Mac_Web" /><category term="git" /><category term="github" /><category term="homebrew" /><summary type="html">This post describes how to install git and github on your mac installation. There are two common ways to install. Both methods are described below. Please note the first way requires homebrew.</summary></entry><entry><title type="html">Jekyll: Setting up your development environment</title><link href="https://jenntesolin.com/blog/2019/12/11/Jekyll-Set-Up-Publish/" rel="alternate" type="text/html" title="Jekyll: Setting up your development environment" /><published>2019-12-11T15:30:21-05:00</published><updated>2019-12-11T15:30:21-05:00</updated><id>https://jenntesolin.com/blog/2019/12/11/Jekyll-Set-Up-Publish</id><content type="html" xml:base="https://jenntesolin.com/blog/2019/12/11/Jekyll-Set-Up-Publish/">&lt;p&gt;
  Jekyll is a static site generator that runs on NodeJS. Its a great alternative to WordPress that eliminates the need for databases.&lt;!--more--&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;em&gt;This post was originally written on March 17, 2015. It has been updated for Mac OS Catalina.&lt;/em&gt;
&lt;/p&gt;
&lt;h3&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;a href=&quot;/blog/2019/12/12/mac-ruby/&quot;&gt;Ruby&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Install Jekyll dependencies:&lt;/h3&gt;
&lt;p&gt;
  To install Jekyll, run the command:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install jekyll bundler&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
  You can import your current WordPress posts, by first exporting your entire Wordpress blog using the WordPress tool to Export to an XML file.
&lt;/p&gt;

&lt;p&gt;
  Once your file is ready, you will need to install the Jekyll Importer by the below command:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install jekyll-import&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
  Here is a list of other plugins that may be useful in your blog:
&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://github.com/JesseHerrick/jekyll-angular&quot; target=&quot;_blank&quot;  rel=&quot;nofollow noreferrer noopener&quot;&gt;jekyll-angular&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://github.com/jekyll/jekyll-feed&quot; target=&quot;_blank&quot;  rel=&quot;nofollow noreferrer noopener&quot;&gt;jekyll-feed&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://jekyllrb.com/docs/pagination/&quot; target=&quot;_blank&quot;  rel=&quot;nofollow noreferrer noopener&quot;&gt;jekyll-paginate&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a list over on the &lt;a href=&quot;https://jekyllrb.com/docs/plugins/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer noopener&quot;&gt;jekyll website&lt;/a&gt; (separated by category).&lt;/p&gt;

&lt;h3&gt;A new Jekyll instance&lt;/h3&gt;

&lt;p&gt;
  &lt;em&gt;Skip to next section to import your WordPress blog.&lt;/em&gt;
&lt;/p&gt;

&lt;p&gt;
  First, run the the below command, replacing &quot;my-site-name&quot; with the folder name for your site.
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jekyll new my-site-name&lt;br /&gt;cd my-new-site-name&lt;br /&gt;bundle exec jekyll serve&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
  Sample output for running &lt;code&gt;jekyll new my-site-name&lt;/code&gt;.
&lt;/p&gt;
&lt;img src=&quot;https://jenntesolin.nyc3.digitaloceanspaces.com/blog/jekyll-new-cmd1.png&quot; target=&quot;Terminal output for commands to serve site&quot; /&gt;

&lt;p&gt;
  Jekyll will now generate a site in the folder &quot;&lt;code&gt;my-site-name&lt;/code&gt;&quot;.
&lt;/p&gt;
&lt;p&gt;
  To override the default jekyll theme, you will need ot create two folders as seen in the list below. These are &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;sass&lt;/code&gt;, &lt;code&gt;_includes&lt;/code&gt; and &lt;code&gt;_layouts&lt;/code&gt;. For more information check out &lt;a href=&quot;https://jekyllrb.com/docs/themes/#overriding-theme-defaults&quot;  target=&quot;_blank&quot; rel=&quot;nofollow noreferrer noopener&quot;&gt;overriding theme defaults&lt;/a&gt;.
&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;code&gt;_config.yml&lt;/code&gt; stores the website configuration data such as site name, description and base address. Check out &lt;a href=&quot;https://gist.github.com/jennifert/de156dc7b792a3f3a0e4b63aa66e768a&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer noopener&quot;&gt;my sample config file&lt;/a&gt;.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;_posts&lt;/code&gt; is where posts for your site are stored in markdown or HTML format. Check out &lt;a href=&quot;https://gist.githubusercontent.com/jennifert/896428b15cd586f91fd36872a0bff1d5/raw/acedbfb817fb90e6ce0fb713043edae79c93f448/jekyll-post.markdown&quot; target=&quot;_blank&quot;  rel=&quot;nofollow noreferrer noopener&quot;&gt;my sample post formatting&lt;/a&gt;.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;_sites&lt;/code&gt; This is where the pages will be built into for your production build.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;about.md&lt;/code&gt; is the about page for your site.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;feed.xml&lt;/code&gt; will have your rss feed. This generates on its own.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;index.md&lt;/code&gt; your site's main page.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;404.html&lt;/code&gt; your sites &quot;page not found&quot; file.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;gemfile&lt;/code&gt; a list of ruby plugins installed
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;assets&lt;/code&gt; where you can store your js and other files
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;sass&lt;/code&gt; your sass code
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;_includes&lt;/code&gt; is where you store portions of a file such as your menu, header, footer, and analytics code.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;_layouts&lt;/code&gt;puts the pieces of the includes together for a post, page and index file.
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;cd my-site-name&lt;br&gt;bundle exec jekyll serve&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
  Then, browse to: &lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer noopener&quot;&gt;http://localhost:4000&lt;/a&gt;.  You can edit files, and Jekyll will make those updates behind the scene as soon as you save...just refresh to see your changes.
&lt;/p&gt;

&lt;p&gt;
  Below is what the directory will look like in the terminal, as well as the ouput running the &lt;code&gt;serve&lt;/code&gt;command to preview your site locally:
&lt;/p&gt;
&lt;img src=&quot;https://jenntesolin.nyc3.digitaloceanspaces.com/blog/jekyll-new-cmd2.png&quot; alt=&quot;Jekyll serve command terminal output&quot; /&gt;

&lt;h3&gt;WordPress Import instructions (wordpress.com and self hosted)&lt;/h3&gt;
&lt;p&gt;
  Click one of the links below to check out the awesome docs at Jekyll RB.
&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;a href=&quot;http://import.jekyllrb.com/docs/wordpressdotcom/&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Jekyll Import Docs: Wordpress.com&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;http://import.jekyllrb.com/docs/wordpress/&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Jekyll Import Docs: Wordpress (self install)&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Drafts&lt;/h3&gt;

&lt;p&gt;
  To wok on a post locally, but not moving it live, create a folder at the root called &lt;code&gt;_drafts&lt;/code&gt;. Next, add a markdown or html file without the address. Finally, run the below in your terminal:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bundle exec jekyll serve --drafts&lt;/code&gt;&lt;/pre&gt;

&lt;img src=&quot;https://jenntesolin.nyc3.digitaloceanspaces.com/blog/jekyll5.png&quot; alt=&quot;Terminal screen output showing draft folder&quot;&gt;

&lt;p&gt;
  Changes can be made on the fly using this method as well. When ready to publish, move the file to &lt;code&gt;_posts&lt;/code&gt; and add a date.
&lt;/p&gt;

&lt;h3&gt;Publishing your new site&lt;/h3&gt;

&lt;p&gt;
  The last step is in this process is to push your files on-line. First, instead of &lt;code&gt;jekyll serve&lt;/code&gt; you will want to run &lt;code&gt;jekyll build&lt;/code&gt; like below. This replaces all of your development links with what your production link. &lt;a href=&quot;/blog/2015/08/08/jekyll-config-file/&quot;&gt;Check out how to set your configuration.&lt;/a&gt;
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bundle exec jekyll build&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
  Move into the root of &lt;code&gt;_site&lt;/code&gt;. These are the production ready files that should be moved to your server.
&lt;/p&gt;

&lt;p&gt;
  The first chunk of files below shows the root of my Jekyll site, while the second shows the production ready files. Note that some files from the root of the Jekyll site are not included. These are excluded in &lt;code&gt;_config.yml&lt;/code&gt;
&lt;/p&gt;

&lt;img src=&quot;https://jenntesolin.nyc3.digitaloceanspaces.com/blog/jekyll-build-cmd.png&quot; alt=&quot;Terminal screen output showing production folder contents&quot;&gt;

&lt;p&gt;
  Note that if you use GitHub pages, you will need to compile the files on your computer first  then commit your files to the master branch.
&lt;/p&gt;

&lt;h3&gt;Resources&lt;/h3&gt;

&lt;p&gt;
  Check out these Jekyll tutorials for more on working with the Jekyll static site generator:
&lt;/p&gt;

&lt;ul&gt;

  &lt;li&gt;
    &lt;a href=&quot;/blog/2016/02/04/jekyll-on-azure/&quot;&gt;Configure on Azure or Github Pages&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;/blog/2015/08/08/jekyll-config-file/&quot;&gt;The configuration file&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;/blog/2015/10/28/fix-jekyll-pagination-upgrade-to-3/&quot;&gt;Fix pagination after upgrading (V2 to V3)&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;/blog/2015/05/22/Jekyll-Custom-Easy-Search-jquery/&quot;&gt;Easy searching with JSON and jQuery&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;http://stackoverflow.com/a/4920620&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer noopener&quot;&gt;Jekyll on Stack Overflow&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;http://import.jekyllrb.com/docs/wordpressdotcom/&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Jekyll Import Docs: Wordpress.com&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;http://import.jekyllrb.com/docs/wordpress/&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Jekyll Import Docs: Wordpress (self install)&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;http://jekyllrb.com/docs/drafts/&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Jekyll Docs - Working with drafts&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;http://jekyllrb.com/docs/troubleshooting/#installation-problems&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Jekyll Docs - Installation Problems&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jennifer Tesolin</name></author><category term="Tutorial" /><category term="Mac_Web" /><category term="Jekyll" /><category term="WordPress" /><category term="Ruby" /><summary type="html">Jekyll is a static site generator that runs on NodeJS. Its a great alternative to WordPress that eliminates the need for databases. This post was originally written on March 17, 2015. It has been updated for Mac OS Catalina. Requirements Ruby</summary></entry><entry><title type="html">Installing Homebrew and Fixing Ruby on your Mac</title><link href="https://jenntesolin.com/blog/2019/12/10/mac-ruby/" rel="alternate" type="text/html" title="Installing Homebrew and Fixing Ruby on your Mac" /><published>2019-12-10T15:50:00-05:00</published><updated>2019-12-10T15:50:00-05:00</updated><id>https://jenntesolin.com/blog/2019/12/10/mac-ruby</id><content type="html" xml:base="https://jenntesolin.com/blog/2019/12/10/mac-ruby/">&lt;p&gt;
	This post describes how to install homebrew, and use it to fix your Ruby install. &lt;!--more--&gt;
&lt;/p&gt;

&lt;h3&gt;Enable Ruby&lt;/h3&gt;

&lt;p&gt;
	First up, let's enable Ruby. We are installing Ruby first as other items needed for development and installation require it.
&lt;/p&gt;

&lt;h4&gt;Step 1: Install X-code, and check to make sure that its the latest&lt;/h4&gt;

&lt;p&gt;
	To install x-Code, head over to the app store then click: &quot;categories&quot; &gt; &quot;development&quot;. It is typically near the top of the free downloads. Click the download button, then go grab a snack.... it clocks in at about 8GB so it may take awhile to download and install.
&lt;/p&gt;

&lt;p&gt;
	If you already have it installed, make sure its up to date.
&lt;/p&gt;

&lt;h4&gt;Step 2: Accept the license agreements&lt;/h4&gt;

&lt;p&gt;
	In order to use the build tools, the licenses must be accepted. Run the below commands in your terminal (&quot;Utilities&quot; &gt; &quot;Terminal&quot;). Be sure to read and accept the agreements.
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xcode-select --install&lt;br&gt;sudo xcodebuild -license&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Step 3: Check if Ruby is installed, then update the files&lt;/h4&gt;

&lt;p&gt;
	To check what version of Ruby you have, you will need to run the below command in the terminal:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -v&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
	To update your ruby installation and gems to the latest version, run the below commands. Please note that multiple versions of Ruby are beyond the scope of this blog. If you want to run multiple versions, check out a project like RVM (&lt;a href=&quot;https://stackoverflow.com/a/58316584&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer noopener&quot;&gt;Stack Overflow post: fixing Ruby&lt;/a&gt;).
&lt;/p&gt;

&lt;h3&gt;Install homebrew&lt;/h3&gt;

&lt;p&gt;
	Homebrew is basically a package manager for the Mac, and in this being used to fix the default Ruby version that comes with the Mac. It will also be used further into the tutorial to install other development items.
&lt;/p&gt;

&lt;p&gt;
	Go to the homebrew site (&lt;a href=&quot;https://brew.sh/&quot; rel=&quot;nofollow noreferrer noopener&quot;&gt;brew.sh&lt;/a&gt;) and check out the latest download code and run in in the terminal. It should look something like this:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;&lt;/code&gt;&lt;/pre&gt;

&lt;img src=&quot;https://jenntesolin.nyc3.digitaloceanspaces.com/blog/homebrew-site.jpg&quot; alt=&quot;Homebrew website&quot; /&gt;

&lt;p&gt;
	Once the install has completed, its best to run the below commands to make sure your installation is okay and has the latest files.
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew doctor&lt;br&gt;brew update&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
	Please note that Homebrew commands are easiest for fixing Ruby, however, as mentioned above, some prefer Ruby Version Manager (RVM) to switch Ruby versions.
&lt;/p&gt;

&lt;h4&gt;Updating Homebrew packages&lt;/h4&gt;

&lt;p&gt;
	To update packages, you will need to run an update, and upgrade like below:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew update&lt;br /&gt;brew upgrade&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Update Ruby and installed gems.&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;brew install ruby&lt;br&gt;gem update --system&lt;br&gt;gem update&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Resources&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;
		&lt;a href=&quot;https://brew.sh/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer noopener&quot;&gt;Homebrew homepage&lt;/a&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/58316584&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer noopener&quot;&gt;Stack Overflow post: fixing Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jennifer Tesolin</name></author><category term="Tutorial" /><category term="Mac_Web" /><category term="Ruby" /><summary type="html">This post describes how to install homebrew, and use it to fix your Ruby install.</summary></entry><entry><title type="html">Setting up your Mac computer for local development and programming</title><link href="https://jenntesolin.com/blog/2019/12/02/mac-local-dev-server/" rel="alternate" type="text/html" title="Setting up your Mac computer for local development and programming" /><published>2019-12-02T15:40:21-05:00</published><updated>2019-12-02T15:40:21-05:00</updated><id>https://jenntesolin.com/blog/2019/12/02/mac-local-dev-server</id><content type="html" xml:base="https://jenntesolin.com/blog/2019/12/02/mac-local-dev-server/">&lt;p&gt;Mac computers are great for programming, and many development software and Utilities are free to get set up and running. This post describes how to set up your mac for programming and web development from enabling PHP, Ruby, node and more. &lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;To really understand what goes on in web development, you need to understand what goes on behind the scenes on your server environment. This would mean taking the time to install and enable the tools, servers and other things you will use by hand alongside or in place of solutions such as XAMPP or MAMP.&lt;/p&gt;

&lt;!-- TODO: try to just use tag - Mac_Web to generate once all created--&gt;
&lt;p&gt;
	&lt;em&gt;Note: it is recommended to start with the tutorial &quot;Installing Homebrew and Fixing Ruby on your Mac&quot; before following instructions in the Git and Github tutorial.&lt;/em&gt;
&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
		Apache
	&lt;/li&gt;
	&lt;li&gt;
		ASP.net
	&lt;/li&gt;
	&lt;li&gt;
		Composer
	&lt;/li&gt;
	&lt;li&gt;
		&lt;a href=&quot;/blog/2019/12/12/git-github/&quot;&gt;Git and Github&lt;/a&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;a href=&quot;/blog/2019/12/11/Jekyll-Set-Up-Publish/&quot;&gt;Jekyll&lt;/a&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;a href=&quot;/blog/2019/12/10/mac-ruby/&quot;&gt;Installing Homebrew and Fixing Ruby on your Mac&lt;/a&gt;
	&lt;/li&gt;
	&lt;li&gt;
		MySql/Maria DB
	&lt;/li&gt;
	&lt;li&gt;
		&lt;a href=&quot;/blog/2018/04/18/installing-node-js-and-grunt/&quot;&gt;Node JS&lt;/a&gt;
	&lt;/li&gt;
	&lt;li&gt;
		PHP
	&lt;/li&gt;
	&lt;li&gt;
		Python
	&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jennifer Tesolin</name></author><category term="Tutorial" /><category term="Series" /><category term="Mac" /><category term="Apache" /><category term="PHP" /><category term="MySQL" /><category term="Node" /><category term="Ruby" /><summary type="html">Mac computers are great for programming, and many development software and Utilities are free to get set up and running. This post describes how to set up your mac for programming and web development from enabling PHP, Ruby, node and more. To really understand what goes on in web development, you need to understand what goes on behind the scenes on your server environment. This would mean taking the time to install and enable the tools, servers and other things you will use by hand alongside or in place of solutions such as XAMPP or MAMP.</summary></entry><entry><title type="html">Using iOS and Android devices together.</title><link href="https://jenntesolin.com/blog/2018/09/26/using-ios-and-android-together/" rel="alternate" type="text/html" title="Using iOS and Android devices together." /><published>2018-09-26T00:00:00-04:00</published><updated>2018-09-26T00:00:00-04:00</updated><id>https://jenntesolin.com/blog/2018/09/26/using-ios-and-android-together</id><content type="html" xml:base="https://jenntesolin.com/blog/2018/09/26/using-ios-and-android-together/">&lt;p&gt;Using an android in an Apple environment can be a bit tricky, but here are some tricks and resources to help you out. This post is an update to one titled &quot;Moving from an iOS Device to Android (iCloud)&quot;.&lt;!--more--&gt;&lt;/p&gt;
&lt;P&gt;
  &lt;em&gt;Note: I am not in partnership or sponsored in anyway by the below programs, they are what I have researched and used over the past few years.&lt;/em&gt;
&lt;/P&gt;
&lt;p&gt;&lt;strong&gt;Calendar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=org.dmfs.caldav.icloud&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;SmoothSync for Cloud Calendar&lt;/a&gt;: SmoothSync for Cloud Calendar syncs your iCloud calendars and reminders. Please note this is for Apple Calendars, it will not sync events from your Google Calendar to your Mac.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contacts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=org.dmfs.carddav.icloud&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;SmoothSync for Cloud Contacts&lt;/a&gt;: SmoothSync for Cloud Contacts syncs your iCloud contacts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;iCloud Mail Sync&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The easiest way to sync  your settings is to use this &lt;a href=&quot;https://support.apple.com/en-us/HT202304&quot; title=&quot;Imap settings for iCloud&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;IMAP email guide&lt;/a&gt; from apple. You will need to generate an app-specific password for your client. &lt;a href=&quot;https://www.androidcentral.com/how-set-your-icloud-email-account-android&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;AndroidCentral&lt;/a&gt; has a few notes on getting around any SSL issues (try TSL)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;iTunes Library Sync&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
  To sync your library, there are excellent products from JRT Studio to sync and play your files. Please note though, that the video files purchased in the iTunes store will not play on your android device due to the DRM used.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;a href=&quot;http://www.jrtstudio.com/iSyncr-iTunes-for-Android&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;iSyncer&lt;/a&gt;: This program is used to move the files from your iTunes library to your device. You will need to download a copy on your android and a copy on your Mac.
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jrtstudio.com/RocketPlayer/Free-vs-premium-and-cloud&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Rocket player&lt;/a&gt;: this program will allow you to play your files and cast them, though you will need to have oth the free version and the premium license to play all file formats (alac, tta, ape, mpc, wav, flac, wv, wma).
&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jennifer Tesolin</name><email>me@jenntesolin.com</email></author><category term="Tutorial" /><category term="android" /><category term="iCloud" /><category term="iOS" /><summary type="html">Using an android in an Apple environment can be a bit tricky, but here are some tricks and resources to help you out. This post is an update to one titled &quot;Moving from an iOS Device to Android (iCloud)&quot;. Note: I am not in partnership or sponsored in anyway by the below programs, they are what I have researched and used over the past few years. Calendar SmoothSync for Cloud Calendar: SmoothSync for Cloud Calendar syncs your iCloud calendars and reminders. Please note this is for Apple Calendars, it will not sync events from your Google Calendar to your Mac. Contacts SmoothSync for Cloud Contacts: SmoothSync for Cloud Contacts syncs your iCloud contacts. iCloud Mail Sync The easiest way to sync your settings is to use this IMAP email guide from apple. You will need to generate an app-specific password for your client. AndroidCentral has a few notes on getting around any SSL issues (try TSL) iTunes Library Sync To sync your library, there are excellent products from JRT Studio to sync and play your files. Please note though, that the video files purchased in the iTunes store will not play on your android device due to the DRM used. iSyncer: This program is used to move the files from your iTunes library to your device. You will need to download a copy on your android and a copy on your Mac. Rocket player: this program will allow you to play your files and cast them, though you will need to have oth the free version and the premium license to play all file formats (alac, tta, ape, mpc, wav, flac, wv, wma).</summary></entry><entry><title type="html">Installing Node JS and Grunt</title><link href="https://jenntesolin.com/blog/2018/04/18/installing-node-js-and-grunt/" rel="alternate" type="text/html" title="Installing Node JS and Grunt" /><published>2018-04-18T00:00:00-04:00</published><updated>2018-04-18T00:00:00-04:00</updated><id>https://jenntesolin.com/blog/2018/04/18/installing-node-js-and-grunt</id><content type="html" xml:base="https://jenntesolin.com/blog/2018/04/18/installing-node-js-and-grunt/">&lt;p&gt;This tutorial focuses on installing the platform, and provides resources for using Grunt.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;em&gt;This was originally from May 8, 2013 and has been re-written for the latest version of Node and Grunt.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;Step 1: Download the latest stable binary from &lt;a title=&quot;Node JS web site&quot; href=&quot;https://nodejs.org/en/download/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;nodejs.org&lt;/a&gt;. On production servers is recommended to use the latest STABLE version. The default settings will be fine.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jenntesolin.nyc3.digitaloceanspaces.com/blog/nodejs-home.png&quot;&gt;&lt;img alt=&quot;NodeJS.com homepage&quot; src=&quot;https://jenntesolin.nyc3.digitaloceanspaces.com/blog/nodejs-home_thumb.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Step 2: Verify your path as per installer message: Make sure that &lt;strong&gt;/usr/local/bin&lt;/strong&gt; is in your $PATH.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jenntesolin.nyc3.digitaloceanspaces.com/blog/Screen-Shot-2013-05-07-at-9.38.02-PM.png&quot;&gt;&lt;img class=&quot;alignnone size-medium wp-image-167&quot; alt=&quot;Installer screenshot after install is successful&quot; src=&quot;https://jenntesolin.nyc3.digitaloceanspaces.com/blog/Screen-Shot-2013-05-07-at-9.38.02-PM-300x211.png&quot; width=&quot;300&quot; height=&quot;211&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note: I found this Stackoverflow post useful: &lt;a href=&quot;https://stackoverflow.com/questions/42323485/set-environment-variables-on-mac-os-x-sierra#42323635&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;https://stackoverflow.com&lt;/a&gt;. Please note to check that the path in the installer is shown in case it differs between versions. For my install, the path was correctly set.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;USE A PROXY WITH NODE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you require the use of a proxy with node, you set it with the below (this to this post &lt;a href=&quot;https://jjasonclark.com/how-to-setup-node-behind-web-proxy/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;How to setup Node.js and Npm behind a corporate web proxy&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm config set proxy http://proxy.example.org:8080&lt;br&gt;npm config set https-proxy http://proxy.example.org:8080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GRUNT SET-UP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Step 1: Installing Grunt on your machine globally.&lt;/p&gt;
&lt;p&gt;This section uses grunt &lt;em&gt;0.4.x&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This guide was made from referring to the official getting started documentation: &lt;a href=&quot;http://gruntjs.com/getting-started&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;http://gruntjs.com/getting-started&lt;/a&gt;. The sections referred to in this blog are: &quot;&lt;a href=&quot;http://gruntjs.com/getting-started#installing-the-cli&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot; name=&quot;installing-the-cli&quot;&gt;Installing the CLI&lt;/a&gt;&quot; and &quot;&lt;a href=&quot;http://gruntjs.com/getting-started#preparing-a-new-grunt-project&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot; name=&quot;preparing-a-new-grunt-project&quot;&gt;Preparing a new grunt project&lt;/a&gt;&quot;. Grunt JS is installed by what node js refers to as NPM, or Node Package Manager. To install Grunt from NPM, you will need to use the command line.&lt;/p&gt;
&lt;p&gt;Type following command into the terminal:&lt;/p&gt;
&lt;code&gt;npm install -g grunt-cli&lt;/code&gt;
&lt;p&gt;Step 2: Create a package.json file&lt;/p&gt;
&lt;p&gt;go into your project directory, and run the below command. You can use the default settings, as the text file will be edited. My output is below.&lt;/p&gt;
&lt;code&gt;npm init&lt;/code&gt;
&lt;p&gt;&lt;a href=&quot;https://jenntesolin.nyc3.digitaloceanspaces.com/blog/Screen-Shot-2013-05-07-at-10.53.38-PM.png&quot;&gt;&lt;img class=&quot;alignnone size-medium wp-image-182&quot; alt=&quot;run npm init&quot; src=&quot;https://jenntesolin.nyc3.digitaloceanspaces.com/blog/Screen-Shot-2013-05-07-at-10.53.38-PM-300x158.png&quot; width=&quot;300&quot; height=&quot;158&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Open your favorite text editor, and edit the file &quot;package.json&quot; replace the text so it reads similar to the below:&lt;/p&gt;
&lt;code&gt;{&lt;br&gt;
  &quot;name&quot;: &quot;demo-project&quot;,&lt;br&gt;
  &quot;version&quot;: &quot;0.0.1&quot;,&lt;br&gt;
  &quot;author&quot;: &quot;Jennifer Tesolin&quot;&lt;br&gt;
}&lt;/code&gt;
&lt;p&gt;Now, using the terminal, run the below command in your project directory:&lt;/p&gt;
&lt;code&gt;npm install grunt --save-dev&lt;br&gt;
npm install&lt;/code&gt;
&lt;p&gt;This will install grunt into your locally in your package folder. If you open your package.json, you will find a new section added:&lt;/p&gt;
&lt;code&gt;,&lt;br&gt;
&quot;devDependencies&quot;: {&lt;br&gt;
    &quot;grunt&quot;: &quot;~0.4.1&quot;&lt;br&gt;
 }&lt;/code&gt;
&lt;p&gt;&lt;strong&gt;Associating plugins with Grunt/package.json&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Run the below command to use the plugin npm.&lt;/p&gt;
&lt;code&gt;npm install grunt-contrib --save-dev&lt;/code&gt;
&lt;p&gt;&lt;strong&gt;Create your grunt file&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In your text editor, create a file called &quot;Gruntfile.js&quot; and save this into your project directory. A sample copy is below:&lt;/p&gt;
&lt;code&gt;module.exports = function(grunt) {&lt;br&gt;
&lt;br&gt;
  // Project configuration.&lt;br&gt;
  grunt.initConfig({&lt;br&gt;
&lt;br&gt;
  });&lt;br&gt;
&lt;br&gt;
  // Load call for plugins&lt;br&gt;
&lt;br&gt;
  // Default task(s).&lt;br&gt;
&lt;br&gt;
};&lt;/code&gt;
&lt;p&gt;Check out the plugin's you can configure here: &lt;a href=&quot;http://gruntjs.com/sample-gruntfile&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;http://gruntjs.com/sample-gruntfile&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
  My current grunt file:&lt;br /&gt;
  &lt;a href=&quot;https://gist.github.com/jennifert/9037731119d3b7200bb17229822c4fb8&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;https://gist.github.com/jennifert/9037731119d3b7200bb17229822c4fb8&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Re-install devDependencies or dependencies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With the new package.lock file, npm update may not get the latest version if its a major update. Use the below to pick up the latest package. With Thanks to stack overflow (please let me know if you see the post, it was deleted from my notes).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm uninstall jshint&lt;br&gt;npm cache clean -f&lt;br&gt;npm install --save-dev jshint&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Resources, and Additional sources used&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For more grunt resources, check out the below.&lt;/p&gt;
&lt;p&gt;
  &lt;a href=&quot;https://tutsplus.com/tutorials/search/grunt&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Tutsplus.com's How-to tutorials&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href=&quot;https://www.sitepoint.com/?s=grunt&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Sitepoint.com's How-to tutorials&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href=&quot;https://scotch.io/tutorials/a-simple-guide-to-getting-started-with-grunt&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;A Simple Guide to Getting Started With Grunt ― Scotch&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/grunt-devtools/fbiodiodggnlakggeeckkjccjhhjndnb?hl=en&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Google Chrome Grunt dev tools.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.justinmccandless.com/blog/A+Tutorial+for+Getting+Started+with+Grunt&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;A tutorial for getting started with Grunt&lt;/a&gt; for plugin section.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://net.tutsplus.com/tutorials/javascript-ajax/meeting-grunt-the-build-tool-for-javascript/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Meet Grunt: The Build Tool for JavaScript&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web.archive.org/web/20170606003354/http://dailyjs.com/post/backbone-tutorial-1&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;DailyJS: Backbone.js Tutorial: Build Environment&lt;/a&gt;&lt;/p&gt;</content><author><name>Jennifer Tesolin</name><email>me@jenntesolin.com</email></author><category term="Tutorial" /><category term="Mac_Web" /><category term="Grunt" /><category term="Node JS" /><summary type="html">This tutorial focuses on installing the platform, and provides resources for using Grunt. This was originally from May 8, 2013 and has been re-written for the latest version of Node and Grunt. Step 1: Download the latest stable binary from nodejs.org. On production servers is recommended to use the latest STABLE version. The default settings will be fine. Step 2: Verify your path as per installer message: Make sure that /usr/local/bin is in your $PATH. Note: I found this Stackoverflow post useful: https://stackoverflow.com. Please note to check that the path in the installer is shown in case it differs between versions. For my install, the path was correctly set. USE A PROXY WITH NODE If you require the use of a proxy with node, you set it with the below (this to this post How to setup Node.js and Npm behind a corporate web proxy). npm config set proxy http://proxy.example.org:8080npm config set https-proxy http://proxy.example.org:8080 GRUNT SET-UP Step 1: Installing Grunt on your machine globally. This section uses grunt 0.4.x This guide was made from referring to the official getting started documentation: http://gruntjs.com/getting-started. The sections referred to in this blog are: &quot;Installing the CLI&quot; and &quot;Preparing a new grunt project&quot;. Grunt JS is installed by what node js refers to as NPM, or Node Package Manager. To install Grunt from NPM, you will need to use the command line. Type following command into the terminal: npm install -g grunt-cli Step 2: Create a package.json file go into your project directory, and run the below command. You can use the default settings, as the text file will be edited. My output is below. npm init Open your favorite text editor, and edit the file &quot;package.json&quot; replace the text so it reads similar to the below: { &quot;name&quot;: &quot;demo-project&quot;, &quot;version&quot;: &quot;0.0.1&quot;, &quot;author&quot;: &quot;Jennifer Tesolin&quot; } Now, using the terminal, run the below command in your project directory: npm install grunt --save-dev npm install This will install grunt into your locally in your package folder. If you open your package.json, you will find a new section added: , &quot;devDependencies&quot;: { &quot;grunt&quot;: &quot;~0.4.1&quot; } Associating plugins with Grunt/package.json Run the below command to use the plugin npm. npm install grunt-contrib --save-dev Create your grunt file In your text editor, create a file called &quot;Gruntfile.js&quot; and save this into your project directory. A sample copy is below: module.exports = function(grunt) { // Project configuration. grunt.initConfig({ }); // Load call for plugins // Default task(s). }; Check out the plugin's you can configure here: http://gruntjs.com/sample-gruntfile. My current grunt file: https://gist.github.com/jennifert/9037731119d3b7200bb17229822c4fb8</summary></entry><entry><title type="html">Quick Tip: Highcharts credit in a new window</title><link href="https://jenntesolin.com/blog/2017/05/28/basic-highcharts-rightclick/" rel="alternate" type="text/html" title="Quick Tip: Highcharts credit in a new window" /><published>2017-05-28T10:34:00-04:00</published><updated>2017-05-28T10:34:00-04:00</updated><id>https://jenntesolin.com/blog/2017/05/28/basic-highcharts-rightclick</id><content type="html" xml:base="https://jenntesolin.com/blog/2017/05/28/basic-highcharts-rightclick/">&lt;p&gt;Here is a great fiddle by Torstein Hønsi, that shows how to have highcharts credits open in a new window/tab.&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; if you are using for free, you MUST (in the below) re-add the text highcharts.com (in place of your domain). If their domain is not seen, you will be against the license.&lt;/p&gt;

&lt;script async src=&quot;//jsfiddle.net/G9h8z/1/embed/&quot;&gt;&lt;/script&gt;

&lt;h3&gt;Resources:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://www.highcharts.com/docs/getting-started/your-first-chart&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Highcharts.com - First chart&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;http://jsfiddle.net/G9h8z/1/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;JS Fiddle for right click by Torstein Hønsi&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jennifer Tesolin</name></author><category term="Tutorial" /><category term="JavaScript" /><category term="chart" /><summary type="html">Here is a great fiddle by Torstein Hønsi, that shows how to have highcharts credits open in a new window/tab.</summary></entry><entry><title type="html">Quick Tip: WordPress and Campaign Monitor</title><link href="https://jenntesolin.com/blog/2017/01/06/quick-tip-word-press-and-campaign-monitor/" rel="alternate" type="text/html" title="Quick Tip: WordPress and Campaign Monitor" /><published>2017-01-06T12:30:30-05:00</published><updated>2017-01-06T12:30:30-05:00</updated><id>https://jenntesolin.com/blog/2017/01/06/quick-tip-word-press-and-campaign-monitor</id><content type="html" xml:base="https://jenntesolin.com/blog/2017/01/06/quick-tip-word-press-and-campaign-monitor/">&lt;p&gt;Just a quick and easy way to integrate your campaign monitor list. Note: this post first appeared Apr 18, 2013, and has been updated to reflect the most recent information.&lt;!--more--&gt;&lt;/p&gt;
&lt;h3&gt;Adding a subscribe form to your site&lt;/h3&gt;
&lt;p&gt;The easiest way, is to use the WordPress text widget, and then paste in the campaign monitor built form code into it. To get a form, go to your list in campaign monitor, and click &quot;Grow your audience&quot;. Next, click &quot;Copy/paste a form to your site&quot;. Select the list(s) that you want, and then click generate code.  This will provide the form code to put into your blog. You can later customize the settings like confirmation, thank you note, etc.&lt;/p&gt;
&lt;h3&gt;E-mail subscribers&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Campaign Monitor automation (suggested)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;When this post was first typed out, the &quot;automation&quot; functionality was not yet in Campaign Monitor. The Automation functionality in Campaign Monitor can read and parse RSS feeds. First, make sure to add the &quot;&lt;a href=&quot;https://www.campaignmonitor.com/create/rss-to-email/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;RSS to Email&quot;&lt;/a&gt; tags into your template, and &lt;a href=&quot;https://help.campaignmonitor.com/topic.aspx?t=868&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;create your list&lt;/a&gt; (as you normally would). Next &lt;a href=&quot;https://help.campaignmonitor.com/topic.aspx?t=212&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;follow Campaign Monitor's guide&lt;/a&gt; for email automation, using the list and template mentioned earlier. That's it!&lt;/p&gt;
&lt;p&gt;This way is suggested, as its using the Campaign monitor directly, and you are not adding bulk to your theme files and site.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Older way (not suggested)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Add the &lt;a title=&quot;Campaign Monitor Wrapper for PHP&quot; href=&quot;http://campaignmonitor.github.io/createsend-php/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;api wrapper&lt;/a&gt; into the themes directory for you to be able to access the functionality. Next, use the &quot;create a draft campaign&quot; and &quot;Sending a draft campaign to send an email. This code should go into your functions.php file like below:&lt;/p&gt;
&lt;code&gt;function email_alert()  {&lt;br&gt;
    //campaign monitor code&lt;br&gt;
}&lt;br&gt;
add_filter ( 'publish_post', 'email_alert' );&lt;/code&gt;
&lt;p&gt;Resource:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://wordpress.org/support/topic/add_action-with-publish_post&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Wordpress.org support: Publish actions&lt;/a&gt;&lt;/p&gt;</content><author><name>Jennifer Tesolin</name></author><category term="Tip" /><category term="wordpress" /><category term="PHP" /><summary type="html">Just a quick and easy way to integrate your campaign monitor list. Note: this post first appeared Apr 18, 2013, and has been updated to reflect the most recent information. Adding a subscribe form to your site The easiest way, is to use the WordPress text widget, and then paste in the campaign monitor built form code into it. To get a form, go to your list in campaign monitor, and click &quot;Grow your audience&quot;. Next, click &quot;Copy/paste a form to your site&quot;. Select the list(s) that you want, and then click generate code.  This will provide the form code to put into your blog. You can later customize the settings like confirmation, thank you note, etc. E-mail subscribers Campaign Monitor automation (suggested) When this post was first typed out, the &quot;automation&quot; functionality was not yet in Campaign Monitor. The Automation functionality in Campaign Monitor can read and parse RSS feeds. First, make sure to add the &quot;RSS to Email&quot; tags into your template, and create your list (as you normally would). Next follow Campaign Monitor's guide for email automation, using the list and template mentioned earlier. That's it! This way is suggested, as its using the Campaign monitor directly, and you are not adding bulk to your theme files and site. Older way (not suggested) Add the api wrapper into the themes directory for you to be able to access the functionality. Next, use the &quot;create a draft campaign&quot; and &quot;Sending a draft campaign to send an email. This code should go into your functions.php file like below: function email_alert() { //campaign monitor code } add_filter ( 'publish_post', 'email_alert' ); Resource: Wordpress.org support: Publish actions</summary></entry><entry><title type="html">Top 6 resources that you may find at your local library</title><link href="https://jenntesolin.com/blog/2017/01/06/top-6-library-resources/" rel="alternate" type="text/html" title="Top 6 resources that you may find at your local library" /><published>2017-01-06T09:16:30-05:00</published><updated>2017-01-06T09:16:30-05:00</updated><id>https://jenntesolin.com/blog/2017/01/06/top-6-library-resources</id><content type="html" xml:base="https://jenntesolin.com/blog/2017/01/06/top-6-library-resources/">&lt;p&gt;The library now has more services than just book for video lending. This post describes what can be found in the city of Toronto, Canada. Be sure to check out your cities branch as well, as some of the services described below can be found in other major Canadian (and U.S.) cities.&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;The below is my top 6 list (in no particular order). Feel free to agree or disagree. :)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.torontopubliclibrary.ca/lynda&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Lynda subscription:&lt;/a&gt;&lt;/strong&gt; is an online video course centre that covers a few areas of study.  Typically it would cost over 200 per year. One cravat: cannot figure out how to login from phone.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.torontopubliclibrary.ca/safari&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Safari catalog:&lt;/a&gt;&lt;/strong&gt; provides access to all of their tech books.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.torontopubliclibrary.ca/search.jsp?N=&amp;amp;Ns=p_pub_date_sort&amp;amp;Nso=0&amp;amp;Ntt=%22maker+programs%22+%2B+%22computer+%26+library+training%22&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Digital classes:&lt;/a&gt;&lt;/strong&gt; many off the Toronto libraries have classes in: DJIng, green screen, Inkscape, gimp, beginner HTML and CSS, Intro to 3D design and more. What’s pretty cool, is that they use free programs that are great alternatives to paid programs.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Speaking of 3D design, libraries have access to &lt;a href=&quot;http://www.torontopubliclibrary.ca/using-the-library/computer-services/innovation-spaces/3D-design-print.jsp&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;3D printers&lt;/a&gt;!&lt;/strong&gt; Just take one of their certification classes which are offered for free at various branches. Just be sure to take the certification class first!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.torontopubliclibrary.ca/using-the-library/computer-services/innovation-spaces/recording-studio.jsp&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Rent a studio&lt;/a&gt; for Video or Audio production&lt;/strong&gt; Two branches has a digital recording studio complete with green screen and computers with software to edit!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.torontopubliclibrary.ca/museum-arts-passes/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Museum and other passes:&lt;/a&gt;&lt;/strong&gt; borrow tickets to the ROM, science centre, AGO, and more. Though its first come first serve, and unfortunately, Casa Loma is not offered. The passes are good for 2 adults and up to 5 children, which can save a lot of money.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Also, whats great, is that you can use these services even if you work in Toronto, not just live. &lt;a href=&quot;http://www.torontopubliclibrary.ca/using-the-library/your-library-card/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Visit their site to see the requirements for a library card&lt;/a&gt;&lt;/p&gt;</content><author><name>Jennifer Tesolin</name></author><category term="Technology" /><category term="library" /><summary type="html">The library now has more services than just book for video lending. This post describes what can be found in the city of Toronto, Canada. Be sure to check out your cities branch as well, as some of the services described below can be found in other major Canadian (and U.S.) cities.</summary></entry><entry><title type="html">Top 5 additions from the console games that would improve Pokemon Go</title><link href="https://jenntesolin.com/blog/2016/08/24/top-5-console-additions-pokemon-go/" rel="alternate" type="text/html" title="Top 5 additions from the console games that would improve Pokemon Go" /><published>2016-08-24T06:12:56-04:00</published><updated>2016-08-24T06:12:56-04:00</updated><id>https://jenntesolin.com/blog/2016/08/24/top-5-console-additions-pokemon-go</id><content type="html" xml:base="https://jenntesolin.com/blog/2016/08/24/top-5-console-additions-pokemon-go/">&lt;p&gt;Pokemon Go is a great idea for a game but as someone who has played the console games in the past there are quite a few things that seem to be missing. Here is a list of concepts that I feel can help improve the game play. &lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;This is just my opinion. Feel free to agree or disagree. :)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;The Pokemon day care&lt;/strong&gt; - some people use this to level up, but most people use this game play feature to breed Pokemon to create their own eggs (pass on parent moves and IVs)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pokemon fossils&lt;/strong&gt; at Pokestops - especially since the nearby feature is so broken. in the games you can find fossils in various ways to bring back to life extinct Pokemon. It would be great if pokestops dropped fossils similar to eggs, where you walk to bring them back to life. Would make things easier and more fun than waiting for extremely rare encounters.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A way to have a set location as a Pokemon centre&lt;/strong&gt; - In the console games, a Pokemon Centre is set up in each city, and is a free way to heal your team without using potions. Would be neat if you can set a few locations (such as your house or work/school) as one, and if you are around this area you can click a button (say once every hour) and all of your Pokemon will be healed.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bring Pokemon abilities into play&lt;/strong&gt; - Abilities can affect things in battle, or in other areas of the game. For example if your Pikachu has static, you will encounter more electric Pokemon, meanwhile, if your Magmar has Flame Body, your hatch eggs faster in 1/2 the time.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Allow Pokemon you have with you to fight wild Pokemon&lt;/strong&gt; -  This makes it easier to catch for example because the wild Pokemon would not be at full health, and may be sleeping or have another status condition.  In the console games, it is always suggested to leave a pokemon in the red HP wise, and have it sleeping to increase your catch rate.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Jennifer Tesolin</name></author><category term="Games" /><category term="PokemonGo" /><summary type="html">Pokemon Go is a great idea for a game but as someone who has played the console games in the past there are quite a few things that seem to be missing. Here is a list of concepts that I feel can help improve the game play.</summary></entry></feed>